plugins {
    id 'com.android.application'
    id 'org.jetbrains.kotlin.android'
    id 'com.google.dagger.hilt.android'
    id 'kotlin-kapt'
    id "com.google.devtools.ksp" version "1.7.20-1.0.6"
}

kotlin {
    sourceSets {
        debug {
            kotlin.srcDir("build/generated/ksp/debug/kotlin")
        }
        release {
            kotlin.srcDir("build/generated/ksp/release/kotlin")
        }
    }
}


android {
    namespace 'com.frontmatic.scrobbleview'
    compileSdk 33

    defaultConfig {
        applicationId "com.frontmatic.scrobbleview"
        minSdk 24
        targetSdk 33
        versionCode 1
        versionName "1.0"

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        vectorDrawables {
            useSupportLibrary true
        }

        def secretsPropertiesFile = rootProject.file("secrets.properties")
        if (secretsPropertiesFile.exists()) {
            Properties secretsProperties = new Properties()
            secretsProperties.load(new FileInputStream(secretsPropertiesFile))

            buildConfigField("String", "API_KEY", secretsProperties.getProperty("API_KEY"))
            buildConfigField("String", "FEEDBACK_EMAIL", secretsProperties.getProperty("FEEDBACK_EMAIL"))
        }

        buildConfigField("Boolean", "DEBUG", "true")
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    kotlinOptions {
        jvmTarget = '1.8'
    }
    buildFeatures {
        compose true
        buildConfig true
    }
    composeOptions {
        kotlinCompilerExtensionVersion '1.3.2'
    }
    packagingOptions {
        resources {
            excludes += '/META-INF/{AL2.0,LGPL2.1}'
        }
    }
}

dependencies {

    def paging_version = "3.1.1"

    implementation 'androidx.core:core-ktx:1.8.0'
    implementation platform('org.jetbrains.kotlin:kotlin-bom:1.8.0')
    implementation 'androidx.lifecycle:lifecycle-runtime-ktx:2.3.1'
    implementation 'androidx.activity:activity-compose:1.5.1'
    implementation platform('androidx.compose:compose-bom:2023.06.01')
    implementation 'androidx.compose.ui:ui'
    implementation 'androidx.compose.ui:ui-graphics'
    implementation 'androidx.compose.ui:ui-tooling-preview'

    implementation 'androidx.compose.material3:material3:1.1.1'
    implementation "androidx.compose.material3:material3-window-size-class:1.1.1"
    implementation 'androidx.compose.material:material-icons-extended:1.4.3'
    implementation "androidx.compose.material:material:1.4.3"


    // Retrofit
    implementation 'com.squareup.retrofit2:retrofit:2.9.0'
    implementation 'com.squareup.retrofit2:converter-gson:2.9.0'
    implementation("com.jakewharton.retrofit:retrofit2-kotlinx-serialization-converter:1.0.0")

    // Kotlin serialization
    implementation "com.squareup.okhttp3:okhttp:4.7.2"
    implementation 'com.squareup.okhttp3:logging-interceptor:4.9.1'

    // Paging
    implementation "androidx.paging:paging-runtime:$paging_version"
    implementation "androidx.paging:paging-compose:3.2.0-rc01"

    // Coil
    implementation("io.coil-kt:coil-compose:2.2.2")

    // Dagger - Hilt
    implementation "com.google.dagger:hilt-android:2.44.2"
    kapt "com.google.dagger:hilt-android-compiler:2.44"
    kapt 'androidx.hilt:hilt-compiler:1.0.0'
    implementation 'androidx.hilt:hilt-navigation-compose:1.0.0'

    // DataStore Preferences
    implementation("androidx.datastore:datastore-preferences:1.0.0")

    // Room
    implementation "androidx.room:room-runtime:2.4.2"
    kapt "androidx.room:room-compiler:2.4.2"
    implementation "androidx.room:room-ktx:2.4.2"
    // add room paging
    implementation "androidx.room:room-paging:2.4.2"

    // Compose Destinations
    implementation 'io.github.raamcosta.compose-destinations:core:1.7.21-beta'
    ksp 'io.github.raamcosta.compose-destinations:ksp:1.7.21-beta'

//    def accompanist_version = "0.21.0"
//    // Swipe Refresh - Accompanist
//    implementation("com.google.accompanist:accompanist-swiperefresh:$accompanist_version")
//    // systemuicontroller
//    implementation("com.google.accompanist:accompanist-systemuicontroller:$accompanist_version")
//
//    // accompanist pager and pager indicator
//    implementation("com.google.accompanist:accompanist-pager:$accompanist_version")
//    implementation("com.google.accompanist:accompanist-pager-indicators:$accompanist_version")

    testImplementation 'junit:junit:4.13.2'
    androidTestImplementation 'androidx.test.ext:junit:1.1.5'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.5.1'
    androidTestImplementation platform('androidx.compose:compose-bom:2022.10.00')
    androidTestImplementation 'androidx.compose.ui:ui-test-junit4'
    debugImplementation 'androidx.compose.ui:ui-tooling'
    debugImplementation 'androidx.compose.ui:ui-test-manifest'
}